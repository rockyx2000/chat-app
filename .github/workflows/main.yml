name: CI/CD - Build Images and Update Manifests

on:
  push:
    branches: [ main ]

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout App Repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/chat-frontend
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=sha,format=short,prefix=sha-

      - name: Decide primary tag
        id: tag
        run: |
          if [ -n "${{ steps.meta.outputs.version }}" ]; then echo "tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT; else echo "tag=sha-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT; fi

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./app/frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout App Repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/chat-backend
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=sha,format=short,prefix=sha-

      - name: Decide primary tag
        id: tag
        run: |
          if [ -n "${{ steps.meta.outputs.version }}" ]; then echo "tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT; else echo "tag=sha-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT; fi

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./app/backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-and-push-frontend, build-and-push-backend]
    steps:
      - name: Checkout Manifest Repo
        uses: actions/checkout@v4
        with:
          repository: 'rockyx2000/chat-app-manifest'
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Update image tags in manifests
        run: |
          FRONTEND_TAG=${{ needs.build-and-push-frontend.outputs.image_tag }}
          BACKEND_TAG=${{ needs.build-and-push-backend.outputs.image_tag }}
          sed -i "s|ghcr.io/${{ github.repository_owner }}/chat-frontend:.*|ghcr.io/${{ github.repository_owner }}/chat-frontend:${FRONTEND_TAG}|g" manifest-repo/deployment.yaml
          sed -i "s|ghcr.io/${{ github.repository_owner }}/chat-backend:.*|ghcr.io/${{ github.repository_owner }}/chat-backend:${BACKEND_TAG}|g" manifest-repo/deployment.yaml
      - name: Commit and push changes
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          git commit -m "CI: update images frontend:${FRONTEND_TAG} backend:${BACKEND_TAG}" || echo "no changes"
          git push
